{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n * @category Component\n */\n\nexport class MidSideSplit extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n    this.name = \"MidSideSplit\";\n    this._split = this.input = new Split({\n      channels: 2,\n      context: this.context\n    });\n    this._midAdd = new Add({\n      context: this.context\n    });\n    this.mid = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n    this._sideSubtract = new Subtract({\n      context: this.context\n    });\n    this.side = new Multiply({\n      context: this.context,\n      value: Math.SQRT1_2\n    });\n\n    this._split.connect(this._midAdd, 0);\n\n    this._split.connect(this._midAdd.addend, 1);\n\n    this._split.connect(this._sideSubtract, 0);\n\n    this._split.connect(this._sideSubtract.subtrahend, 1);\n\n    this._midAdd.connect(this.mid);\n\n    this._sideSubtract.connect(this.side);\n  }\n\n  dispose() {\n    super.dispose();\n    this.mid.dispose();\n    this.side.dispose();\n\n    this._midAdd.dispose();\n\n    this._sideSubtract.dispose();\n\n    this._split.dispose();\n\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAAoD,kCAApD;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,oBAAT,QAAqC,0BAArC;AAIA;;;;;;;;;;AASA,OAAM,MAAOC,YAAP,SAA4BN,aAA5B,CAA8D;EAoCnEO;IACC,MAAMF,oBAAoB,CAACC,YAAY,CAACE,WAAb,EAAD,EAA6BC,SAA7B,CAA1B;IAnCQ,YAAe,cAAf;IAqCR,KAAKC,MAAL,GAAc,KAAKC,KAAL,GAAa,IAAIV,KAAJ,CAAU;MACpCW,QAAQ,EAAE,CAD0B;MAEpCC,OAAO,EAAE,KAAKA;IAFsB,CAAV,CAA3B;IAIA,KAAKC,OAAL,GAAe,IAAIZ,GAAJ,CAAQ;MAAEW,OAAO,EAAE,KAAKA;IAAhB,CAAR,CAAf;IACA,KAAKE,GAAL,GAAW,IAAIZ,QAAJ,CAAa;MACvBU,OAAO,EAAE,KAAKA,OADS;MAEvBG,KAAK,EAAEC,IAAI,CAACC;IAFW,CAAb,CAAX;IAIA,KAAKC,aAAL,GAAqB,IAAIf,QAAJ,CAAa;MAAES,OAAO,EAAE,KAAKA;IAAhB,CAAb,CAArB;IACA,KAAKO,IAAL,GAAY,IAAIjB,QAAJ,CAAa;MACxBU,OAAO,EAAE,KAAKA,OADU;MAExBG,KAAK,EAAEC,IAAI,CAACC;IAFY,CAAb,CAAZ;;IAKA,KAAKR,MAAL,CAAYW,OAAZ,CAAoB,KAAKP,OAAzB,EAAkC,CAAlC;;IACA,KAAKJ,MAAL,CAAYW,OAAZ,CAAoB,KAAKP,OAAL,CAAaQ,MAAjC,EAAyC,CAAzC;;IACA,KAAKZ,MAAL,CAAYW,OAAZ,CAAoB,KAAKF,aAAzB,EAAwC,CAAxC;;IACA,KAAKT,MAAL,CAAYW,OAAZ,CAAoB,KAAKF,aAAL,CAAmBI,UAAvC,EAAmD,CAAnD;;IACA,KAAKT,OAAL,CAAaO,OAAb,CAAqB,KAAKN,GAA1B;;IACA,KAAKI,aAAL,CAAmBE,OAAnB,CAA2B,KAAKD,IAAhC;EACA;;EAEDI,OAAO;IACN,MAAMA,OAAN;IACA,KAAKT,GAAL,CAASS,OAAT;IACA,KAAKJ,IAAL,CAAUI,OAAV;;IACA,KAAKV,OAAL,CAAaU,OAAb;;IACA,KAAKL,aAAL,CAAmBK,OAAnB;;IACA,KAAKd,MAAL,CAAYc,OAAZ;;IACA,OAAO,IAAP;EACA;;AAtEkE","names":["ToneAudioNode","Split","Add","Multiply","Subtract","optionsFromArguments","MidSideSplit","constructor","getDefaults","arguments","_split","input","channels","context","_midAdd","mid","value","Math","SQRT1_2","_sideSubtract","side","connect","addend","subtrahend","dispose"],"sourceRoot":"","sources":["../../../../Tone/component/channel/MidSideSplit.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}