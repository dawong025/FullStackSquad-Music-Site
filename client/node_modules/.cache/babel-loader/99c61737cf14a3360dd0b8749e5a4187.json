{"ast":null,"code":"import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @example\n * return Tone.Offline(() => {\n * \tconst gt = new Tone.GreaterThan(2).toDestination();\n * \tconst sig = new Tone.Signal(4).connect(gt);\n * }, 0.1, 1);\n * @category Signal\n */\n\nexport class GreaterThan extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n    this.name = \"GreaterThan\";\n    this.override = false;\n    const options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n    this._subtract = this.input = new Subtract({\n      context: this.context,\n      value: options.value\n    });\n    this._gtz = this.output = new GreaterThanZero({\n      context: this.context\n    });\n    this.comparator = this._param = this._subtract.subtrahend;\n    readOnly(this, \"comparator\"); // connect\n\n    this._subtract.connect(this._gtz);\n  }\n\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._gtz.dispose();\n\n    this._subtract.dispose();\n\n    this.comparator.dispose();\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAASA,oBAAT,QAAqC,uBAArC;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,MAAT,QAAsC,UAAtC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAKA;;;;;;;;;;;;AAWA,OAAM,MAAOC,WAAP,SAA2BH,MAA3B,CAA2C;EAoChDI;IACC,MAAMC,MAAM,CAACC,MAAP,CAAcR,oBAAoB,CAACK,WAAW,CAACI,WAAZ,EAAD,EAA4BC,SAA5B,EAAuC,CAAC,OAAD,CAAvC,CAAlC,CAAN;IAnCQ,YAAe,aAAf;IAEA,gBAAoB,KAApB;IAkCR,MAAMC,OAAO,GAAGX,oBAAoB,CAACK,WAAW,CAACI,WAAZ,EAAD,EAA4BC,SAA5B,EAAuC,CAAC,OAAD,CAAvC,CAApC;IAEA,KAAKE,SAAL,GAAiB,KAAKC,KAAL,GAAa,IAAIZ,QAAJ,CAAa;MAC1Ca,OAAO,EAAE,KAAKA,OAD4B;MAE1CC,KAAK,EAAEJ,OAAO,CAACI;IAF2B,CAAb,CAA9B;IAIA,KAAKC,IAAL,GAAY,KAAKC,MAAL,GAAc,IAAId,eAAJ,CAAoB;MAAEW,OAAO,EAAE,KAAKA;IAAhB,CAApB,CAA1B;IAEA,KAAKI,UAAL,GAAkB,KAAKC,MAAL,GAAc,KAAKP,SAAL,CAAeQ,UAA/C;IACAhB,QAAQ,CAAC,IAAD,EAAO,YAAP,CAAR,CAXD,CAaC;;IACA,KAAKQ,SAAL,CAAeS,OAAf,CAAuB,KAAKL,IAA5B;EACA;;EAEiB,OAAXP,WAAW;IACjB,OAAOF,MAAM,CAACC,MAAP,CAAcN,MAAM,CAACO,WAAP,EAAd,EAAoC;MAC1CM,KAAK,EAAE;IADmC,CAApC,CAAP;EAGA;;EAEDO,OAAO;IACN,MAAMA,OAAN;;IACA,KAAKN,IAAL,CAAUM,OAAV;;IACA,KAAKV,SAAL,CAAeU,OAAf;;IACA,KAAKJ,UAAL,CAAgBI,OAAhB;IACA,OAAO,IAAP;EACA;;AAjE+C","names":["optionsFromArguments","Subtract","Signal","GreaterThanZero","readOnly","GreaterThan","constructor","Object","assign","getDefaults","arguments","options","_subtract","input","context","value","_gtz","output","comparator","_param","subtrahend","connect","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/GreaterThan.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}