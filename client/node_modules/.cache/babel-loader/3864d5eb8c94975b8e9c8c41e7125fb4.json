{"ast":null,"code":"import { connect, connectSeries, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for Stereo effects.\n */\n\nexport class StereoEffect extends ToneAudioNode {\n  constructor(options) {\n    super(options);\n    this.name = \"StereoEffect\";\n    this.input = new Gain({\n      context: this.context\n    }); // force mono sources to be stereo\n\n    this.input.channelCount = 2;\n    this.input.channelCountMode = \"explicit\";\n    this._dryWet = this.output = new CrossFade({\n      context: this.context,\n      fade: options.wet\n    });\n    this.wet = this._dryWet.fade;\n    this._split = new Split({\n      context: this.context,\n      channels: 2\n    });\n    this._merge = new Merge({\n      context: this.context,\n      channels: 2\n    }); // connections\n\n    this.input.connect(this._split); // dry wet connections\n\n    this.input.connect(this._dryWet.a);\n\n    this._merge.connect(this._dryWet.b);\n\n    readOnly(this, [\"wet\"]);\n  }\n  /**\n   * Connect the left part of the effect\n   */\n\n\n  connectEffectLeft() {\n    var _ref;\n\n    this._split.connect(arguments.length <= 0 ? undefined : arguments[0], 0, 0);\n\n    connectSeries(...arguments);\n    connect((_ref = arguments.length - 1, _ref < 0 || arguments.length <= _ref ? undefined : arguments[_ref]), this._merge, 0, 0);\n  }\n  /**\n   * Connect the right part of the effect\n   */\n\n\n  connectEffectRight() {\n    var _ref2;\n\n    this._split.connect(arguments.length <= 0 ? undefined : arguments[0], 1, 0);\n\n    connectSeries(...arguments);\n    connect((_ref2 = arguments.length - 1, _ref2 < 0 || arguments.length <= _ref2 ? undefined : arguments[_ref2]), this._merge, 0, 1);\n  }\n\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      wet: 1\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._dryWet.dispose();\n\n    this._split.dispose();\n\n    this._merge.dispose();\n\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AACA,SAASA,OAAT,EAAkBC,aAAlB,EAA6CC,aAA7C,QAAkE,+BAAlE;AACA,SAASC,SAAT,QAA0B,gCAA1B;AAEA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,IAAT,QAAqB,sBAArB;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAIA;;;;AAGA,OAAM,MAAOC,YAAP,SAAiEN,aAAjE,CAAuF;EA4B5FO,YAAYC,OAAZ,EAAwC;IAEvC,MAAMA,OAAN;IA5BQ,YAAe,cAAf;IA8BR,KAAKC,KAAL,GAAa,IAAIN,IAAJ,CAAS;MAAEO,OAAO,EAAE,KAAKA;IAAhB,CAAT,CAAb,CAJuC,CAKvC;;IACA,KAAKD,KAAL,CAAWE,YAAX,GAA0B,CAA1B;IACA,KAAKF,KAAL,CAAWG,gBAAX,GAA8B,UAA9B;IAEA,KAAKC,OAAL,GAAe,KAAKC,MAAL,GAAc,IAAIb,SAAJ,CAAc;MAC1CS,OAAO,EAAE,KAAKA,OAD4B;MAE1CK,IAAI,EAAEP,OAAO,CAACQ;IAF4B,CAAd,CAA7B;IAIA,KAAKA,GAAL,GAAW,KAAKH,OAAL,CAAaE,IAAxB;IACA,KAAKE,MAAL,GAAc,IAAIf,KAAJ,CAAU;MAAEQ,OAAO,EAAE,KAAKA,OAAhB;MAAyBQ,QAAQ,EAAE;IAAnC,CAAV,CAAd;IACA,KAAKC,MAAL,GAAc,IAAIf,KAAJ,CAAU;MAAEM,OAAO,EAAE,KAAKA,OAAhB;MAAyBQ,QAAQ,EAAE;IAAnC,CAAV,CAAd,CAfuC,CAiBvC;;IACA,KAAKT,KAAL,CAAWX,OAAX,CAAmB,KAAKmB,MAAxB,EAlBuC,CAmBvC;;IACA,KAAKR,KAAL,CAAWX,OAAX,CAAmB,KAAKe,OAAL,CAAaO,CAAhC;;IACA,KAAKD,MAAL,CAAYrB,OAAZ,CAAoB,KAAKe,OAAL,CAAaQ,CAAjC;;IACAhB,QAAQ,CAAC,IAAD,EAAO,CAAC,KAAD,CAAP,CAAR;EACA;EAED;;;;;EAGUiB,iBAAiB,GAAuB;IAAA;;IACjD,KAAKL,MAAL,CAAYnB,OAAZ,mDAA8B,CAA9B,EAAiC,CAAjC;;IACAC,aAAa,CAAC,YAAD,CAAb;IACAD,OAAO,SAAO,UAAMyB,MAAN,GAAa,CAApB,uEAAwB,KAAKJ,MAA7B,EAAqC,CAArC,EAAwC,CAAxC,CAAP;EACA;EAED;;;;;EAGUK,kBAAkB,GAAuB;IAAA;;IAClD,KAAKP,MAAL,CAAYnB,OAAZ,mDAA8B,CAA9B,EAAiC,CAAjC;;IACAC,aAAa,CAAC,YAAD,CAAb;IACAD,OAAO,UAAO,UAAMyB,MAAN,GAAa,CAApB,0EAAwB,KAAKJ,MAA7B,EAAqC,CAArC,EAAwC,CAAxC,CAAP;EACA;;EAEiB,OAAXM,WAAW;IACjB,OAAOC,MAAM,CAACC,MAAP,CAAc3B,aAAa,CAACyB,WAAd,EAAd,EAA2C;MACjDT,GAAG,EAAE;IAD4C,CAA3C,CAAP;EAGA;;EAEDY,OAAO;IACN,MAAMA,OAAN;;IACA,KAAKf,OAAL,CAAae,OAAb;;IACA,KAAKX,MAAL,CAAYW,OAAZ;;IACA,KAAKT,MAAL,CAAYS,OAAZ;;IACA,OAAO,IAAP;EACA;;AAnF2F","names":["connect","connectSeries","ToneAudioNode","CrossFade","Split","Gain","Merge","readOnly","StereoEffect","constructor","options","input","context","channelCount","channelCountMode","_dryWet","output","fade","wet","_split","channels","_merge","a","b","connectEffectLeft","length","connectEffectRight","getDefaults","Object","assign","dispose"],"sourceRoot":"","sources":["../../../Tone/effect/StereoEffect.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}