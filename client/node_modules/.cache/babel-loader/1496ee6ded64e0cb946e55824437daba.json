{"ast":null,"code":"var _jsxFileName = \"/Users/hadiramlaoui/Desktop/csc600/final-project-fullstacksquad/client/src/instruments/Drums.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { MembraneInstrument } from '../DrumnIstrument';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function DrumKey(_ref) {\n  let {\n    note,\n    synth,\n    index\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    //On mouse down, trigger the selected drum note.\n    _jsxDEV(\"div\", {\n      onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttackRelease(`${note}`, '8n'),\n      className: classNames('pointer'),\n      style: {\n        //Style of the buttons on drum machine\n        backgroundColor: '#00DDFF',\n        borderStyle: 'solid',\n        borderColor: '#0000FF',\n        borderWidth: 10,\n        display: \"inline-block\",\n        width: 200,\n        height: 200,\n        marginLeft: 10,\n        marginRight: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  );\n}\n_c = DrumKey;\n\nfunction DrumType(_ref2) {\n  let {\n    title,\n    onClick,\n    active\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph3 pv2 ba mr1 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = DrumType;\n\nfunction Drums(_ref3) {\n  let {\n    synth,\n    setSynth\n  } = _ref3;\n  const keys = List([{\n    note: 'C2',\n    idx: 0\n  }, {\n    note: 'C2',\n    idx: 1\n  }, {\n    note: 'C2',\n    idx: 2\n  }, {\n    note: 'C2',\n    idx: 3\n  }, {\n    note: 'C2',\n    idx: 4\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.MembraneSynth({\n        oscillator: {\n          type: newType\n        },\n        \"envelope\": {\n          \"attack\": 0.001,\n          \"decay\": 0.35,\n          \"sustain\": 0.01,\n          \"release\": 1.4\n        },\n        \"octaves\": 9,\n        \"pitchDecay\": 0.0005\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4 pl2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 \",\n      children: keys.map(key => {\n        const note = `${key.note}`;\n        return /*#__PURE__*/_jsxDEV(DrumKey, {\n          //react key\n          note: note,\n          synth: synth,\n          index: key.idx,\n          octaves: 1,\n          pitchDecay: 0.0005\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 23\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl2 pt4 flex mt3',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(DrumType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 7\n  }, this);\n}\n\n_c3 = Drums;\nexport const DrumsInstrument = new MembraneInstrument('Drums', Drums);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DrumKey\");\n$RefreshReg$(_c2, \"DrumType\");\n$RefreshReg$(_c3, \"Drums\");","map":{"version":3,"names":["Tone","classNames","List","React","MembraneInstrument","DrumKey","note","synth","index","triggerAttackRelease","backgroundColor","borderStyle","borderColor","borderWidth","display","width","height","marginLeft","marginRight","DrumType","title","onClick","active","Drums","setSynth","keys","idx","setOscillator","newType","oldSynth","disconnect","MembraneSynth","oscillator","type","toDestination","oscillators","map","key","o","DrumsInstrument"],"sources":["/Users/hadiramlaoui/Desktop/csc600/final-project-fullstacksquad/client/src/instruments/Drums.tsx"],"sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { MembraneInstrument, InstrumentProps } from '../DrumnIstrument';\nimport { CenterCircle16 } from '@carbon/icons-react';\nimport { url } from 'inspector';\n\n//Drum components \ninterface DrumKeyProps {\n  note: string; \n  duration?: string;\n  synth?: Tone.MembraneSynth; // Contains library code for making sound\n  index: number; // give a location for the Drums key\n  octaves: number;\n  pitchDecay: number;\n}\n\nexport function DrumKey({\n  note,\n    synth,\n    index,\n}: DrumKeyProps): JSX.Element {\n    return (\n      //On mouse down, trigger the selected drum note.\n        <div \n            onMouseDown={() => synth?.triggerAttackRelease(`${note}`, '8n')}\n            className={classNames('pointer')} \n            style={{\n              //Style of the buttons on drum machine\n              \n                backgroundColor: '#00DDFF',\n                borderStyle: 'solid',\n                borderColor: '#0000FF',\n                borderWidth: 10,\n                display: \"inline-block\",\n                width: 200,\n                height: 200,\n                marginLeft: 10,\n                marginRight: 10,\n                \n                }}\n        ></div >\n    );\n}\n\n\nfunction DrumType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n        onClick={onClick}\n        className={classNames('dim pointer ph3 pv2 ba mr1 br1 fw7 bw1', {\n            'b--black black': active,\n            'gray b--light-gray': !active,\n          })}\n    >\n        {title}\n    </div>\n);\n}\n\nfunction Drums({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'C2', idx: 0 },\n    { note: 'C2', idx: 1 },\n    { note: 'C2', idx: 2 },\n    { note: 'C2', idx: 3 },\n    { note: 'C2', idx: 4 }\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n        oldSynth.disconnect();\n\n        return new Tone.MembraneSynth({\n            oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n            \"envelope\": {\n                \"attack\": 0.001,\n                \"decay\": 0.35,\n                \"sustain\": 0.01,\n                \"release\": 1.4,\n            },\n            \"octaves\": 9,\n            \"pitchDecay\": 0.0005,\n        }).toDestination();\n    });\n};\n\n    const oscillators: List<OscillatorType> = List([\n      'sine',\n      'sawtooth',\n      'square',\n      'triangle',\n      'fmsine',\n      'fmsawtooth',\n      'fmtriangle',\n      'amsine',\n      'amsawtooth',\n      'amtriangle',\n    ]) as List<OscillatorType>;\n\n    return (\n      <div className=\"pv4 pl2\">\n          <div className=\"relative dib h4 w-100 \">\n              {keys.map(key => {\n                  const note = `${key.note}`;\n                  return (\n                      <DrumKey\n                          key={note} //react key\n                          note={note}\n                          synth={synth}\n                          index={key.idx}\n                          octaves={1}\n                          pitchDecay={0.0005}\n                      />\n                  );\n              },\n              )}\n          </div>\n          <div className={'pl2 pt4 flex mt3'}>\n              {oscillators.map(o => (\n                  <DrumType\n                      key={o}\n                      title={o}\n                      onClick={() => setOscillator(o)}\n                      active={synth?.oscillator.type === o}\n                  />\n              ))}\n          </div>\n      </div>\n  );\n}\n\n  export const DrumsInstrument = new MembraneInstrument('Drums', Drums);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}