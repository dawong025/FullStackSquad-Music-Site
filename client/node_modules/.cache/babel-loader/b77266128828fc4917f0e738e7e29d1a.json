{"ast":null,"code":"var _jsxFileName = \"/Users/hadiramlaoui/Desktop/csc600/final-project-fullstacksquad/client/src/instruments/HadiRam.tsx\";\n// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List } from 'immutable';\nimport React from 'react'; // project imports\n\nimport { MembraneInstrument } from '../DrumnIstrument'; //Drum components \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//Pastel colors for drum pads.\nconst padColors = ['#a0d2eb', '#D4FAFA', '#AFD5F0', '#9DCAEB', '#488282', '#52AB90', '#8AC294', '#E6D5A1'];\nexport function DrumKey(_ref) {\n  let {\n    note,\n    synth,\n    index\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseDown: () => synth === null || synth === void 0 ? void 0 : synth.triggerAttackRelease(`${note}`, '8n'),\n    className: classNames('pointer'),\n    style: {\n      backgroundColor: padColors[index],\n      borderStyle: 'solid',\n      borderColor: '#0000FF',\n      borderWidth: 10,\n      display: \"inline-block\",\n      width: 125,\n      height: 125,\n      marginLeft: 10,\n      marginRight: 10\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = DrumKey;\n\nfunction DrumType(_ref2) {\n  let {\n    title,\n    onClick,\n    active\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClick,\n    className: classNames('dim pointer ph2 pv2 ba mr1 br1 fw7 bw1', {\n      'b--black black': active,\n      'gray b--light-gray': !active\n    }),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = DrumType;\n\nfunction Drums(_ref3) {\n  let {\n    synth,\n    setSynth\n  } = _ref3;\n  const keys = List([{\n    note: 'A2',\n    idx: 0\n  }, {\n    note: 'B2',\n    idx: 1\n  }, {\n    note: 'C2',\n    idx: 2\n  }, {\n    note: 'D2',\n    idx: 3\n  }, {\n    note: 'E2',\n    idx: 4\n  }, {\n    note: 'F2',\n    idx: 5\n  }, {\n    note: 'G2',\n    idx: 6\n  }, {\n    note: 'H2',\n    idx: 7\n  }]);\n\n  const setOscillator = newType => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n      return new Tone.MembraneSynth({\n        oscillator: {\n          type: newType\n        },\n\n        /*\n        values for attack, decay, sustain and release taken from\n        Resource: https://www.devbridge.com/articles/tonejs-coding-music-production-guide/\n        */\n        \"envelope\": {\n          \"attack\": 0.001,\n          \"decay\": 0.20,\n          \"sustain\": 0.15,\n          \"release\": 0.03\n        },\n        \"pitchDecay\": 0.0005\n      }).toDestination();\n    });\n  };\n\n  const oscillators = List(['sine', 'sawtooth', 'square', 'triangle', 'fmsine', 'fmsawtooth', 'fmtriangle', 'amsine', 'amsawtooth', 'amtriangle']);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pv4 pl2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative dib h4 w-100 \",\n      children: keys.map(key => {\n        const note = `${key.note}`;\n        return /*#__PURE__*/_jsxDEV(DrumKey, {\n          //react key\n          note: note,\n          synth: synth,\n          index: key.idx\n        }, note, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'pl2 pt4 flex mt3',\n      children: oscillators.map(o => /*#__PURE__*/_jsxDEV(DrumType, {\n        title: o,\n        onClick: () => setOscillator(o),\n        active: (synth === null || synth === void 0 ? void 0 : synth.oscillator.type) === o\n      }, o, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Drums;\nexport const DrumsInstrument = new MembraneInstrument('Drum Machine', Drums);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DrumKey\");\n$RefreshReg$(_c2, \"DrumType\");\n$RefreshReg$(_c3, \"Drums\");","map":{"version":3,"names":["Tone","classNames","List","React","MembraneInstrument","padColors","DrumKey","note","synth","index","triggerAttackRelease","backgroundColor","borderStyle","borderColor","borderWidth","display","width","height","marginLeft","marginRight","DrumType","title","onClick","active","Drums","setSynth","keys","idx","setOscillator","newType","oldSynth","disconnect","MembraneSynth","oscillator","type","toDestination","oscillators","map","key","o","DrumsInstrument"],"sources":["/Users/hadiramlaoui/Desktop/csc600/final-project-fullstacksquad/client/src/instruments/HadiRam.tsx"],"sourcesContent":["// 3rd party library imports\nimport * as Tone from 'tone';\nimport classNames from 'classnames';\nimport { List, Range } from 'immutable';\nimport React from 'react';\n\n// project imports\nimport { MembraneInstrument, InstrumentProps } from '../DrumnIstrument';\n\n\n//Drum components \ninterface DrumPadProps {\n  note: string;\n  duration?: string;\n  synth?: Tone.MembraneSynth; //membrane synth for more drum like songs.\n  index: number;\n  // minor?: boolean; , minor not needed for drum ads\n}\n\n//Pastel colors for drum pads.\nconst padColors = ['#a0d2eb', '#D4FAFA', '#AFD5F0',\n  '#9DCAEB', '#488282', '#52AB90', '#8AC294', '#E6D5A1']\nexport function DrumKey({\n  note,\n  synth,\n  index,\n}: DrumPadProps): JSX.Element {\n  return (\n    <div\n      onMouseDown={() => synth?.triggerAttackRelease(`${note}`, '8n')}\n      className={classNames('pointer')}\n      style={{\n        backgroundColor: padColors[index],\n        borderStyle: 'solid',\n        borderColor: '#0000FF',\n        borderWidth: 10,\n        display: \"inline-block\",\n        width: 125,\n        height: 125,\n        marginLeft: 10,\n        marginRight: 10,\n      }}\n    ></div >\n  );\n}\n\nfunction DrumType({ title, onClick, active }: any): JSX.Element {\n  return (\n    <div\n      onClick={onClick}\n      className={classNames('dim pointer ph2 pv2 ba mr1 br1 fw7 bw1', {\n        'b--black black': active,\n        'gray b--light-gray': !active,\n      })}\n    >\n      {title}\n    </div>\n  );\n}\n\nfunction Drums({ synth, setSynth }: InstrumentProps): JSX.Element {\n  const keys = List([\n    { note: 'A2', idx: 0 },\n    { note: 'B2', idx: 1 },\n    { note: 'C2', idx: 2 },\n    { note: 'D2', idx: 3 },\n    { note: 'E2', idx: 4 },\n    { note: 'F2', idx: 5 },\n    { note: 'G2', idx: 6 },\n    { note: 'H2', idx: 7 },\n  ]);\n\n  const setOscillator = (newType: Tone.ToneOscillatorType) => {\n    setSynth(oldSynth => {\n      oldSynth.disconnect();\n\n      return new Tone.MembraneSynth({\n        oscillator: { type: newType } as Tone.OmniOscillatorOptions,\n        /*\n        values for attack, decay, sustain and release taken from\n        Resource: https://www.devbridge.com/articles/tonejs-coding-music-production-guide/\n        */\n        \"envelope\": {\n          \"attack\": 0.001,\n          \"decay\": 0.20,\n          \"sustain\": 0.15,\n          \"release\": 0.03,\n        },\n        \"pitchDecay\": 0.0005,\n      }).toDestination();\n    });\n  };\n\n  const oscillators: List<OscillatorType> = List([\n    'sine',\n    'sawtooth',\n    'square',\n    'triangle',\n    'fmsine',\n    'fmsawtooth',\n    'fmtriangle',\n    'amsine',\n    'amsawtooth',\n    'amtriangle',\n  ]) as List<OscillatorType>;\n\n  return (\n    <div className=\"pv4 pl2\">\n      <div className=\"relative dib h4 w-100 \">\n        {keys.map(key => {\n          const note = `${key.note}`;\n          return (\n            <DrumKey\n              key={note} //react key\n              note={note}\n              synth={synth}\n              index={key.idx}\n            />\n          );\n        },\n        )}\n      </div>\n      <div className={'pl2 pt4 flex mt3'}>\n        {oscillators.map(o => (\n          <DrumType\n            key={o}\n            title={o}\n            onClick={() => setOscillator(o)}\n            active={synth?.oscillator.type === o}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport const DrumsInstrument = new MembraneInstrument('Drum Machine', Drums);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}