{"ast":null,"code":"import { Volume } from \"../../component/channel/Volume\";\nimport { ToneAudioBuffers } from \"../../core/context/ToneAudioBuffers\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Source } from \"../Source\";\nimport { Player } from \"./Player\";\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\n\nexport class Players extends ToneAudioNode {\n  constructor() {\n    super(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n    this.name = \"Players\";\n    /**\n     * Players has no input.\n     */\n\n    this.input = undefined;\n    /**\n     * The container of all of the players\n     */\n\n    this._players = new Map();\n    const options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n    /**\n     * The output volume node\n     */\n\n    this._volume = this.output = new Volume({\n      context: this.context,\n      volume: options.volume\n    });\n    this.volume = this._volume.volume;\n    readOnly(this, \"volume\");\n    this._buffers = new ToneAudioBuffers({\n      urls: options.urls,\n      onload: options.onload,\n      baseUrl: options.baseUrl,\n      onerror: options.onerror\n    }); // mute initially\n\n    this.mute = options.mute;\n    this._fadeIn = options.fadeIn;\n    this._fadeOut = options.fadeOut;\n  }\n\n  static getDefaults() {\n    return Object.assign(Source.getDefaults(), {\n      baseUrl: \"\",\n      fadeIn: 0,\n      fadeOut: 0,\n      mute: false,\n      onload: noOp,\n      onerror: noOp,\n      urls: {},\n      volume: 0\n    });\n  }\n  /**\n   * Mute the output.\n   */\n\n\n  get mute() {\n    return this._volume.mute;\n  }\n\n  set mute(mute) {\n    this._volume.mute = mute;\n  }\n  /**\n   * The fadeIn time of the envelope applied to the source.\n   */\n\n\n  get fadeIn() {\n    return this._fadeIn;\n  }\n\n  set fadeIn(fadeIn) {\n    this._fadeIn = fadeIn;\n\n    this._players.forEach(player => {\n      player.fadeIn = fadeIn;\n    });\n  }\n  /**\n   * The fadeOut time of the each of the sources.\n   */\n\n\n  get fadeOut() {\n    return this._fadeOut;\n  }\n\n  set fadeOut(fadeOut) {\n    this._fadeOut = fadeOut;\n\n    this._players.forEach(player => {\n      player.fadeOut = fadeOut;\n    });\n  }\n  /**\n   * The state of the players object. Returns \"started\" if any of the players are playing.\n   */\n\n\n  get state() {\n    const playing = Array.from(this._players).some(_ref => {\n      let [_, player] = _ref;\n      return player.state === \"started\";\n    });\n    return playing ? \"started\" : \"stopped\";\n  }\n  /**\n   * True if the buffers object has a buffer by that name.\n   * @param name  The key or index of the buffer.\n   */\n\n\n  has(name) {\n    return this._buffers.has(name);\n  }\n  /**\n   * Get a player by name.\n   * @param  name  The players name as defined in the constructor object or `add` method.\n   */\n\n\n  player(name) {\n    assert(this.has(name), `No Player with the name ${name} exists on this object`);\n\n    if (!this._players.has(name)) {\n      const player = new Player({\n        context: this.context,\n        fadeIn: this._fadeIn,\n        fadeOut: this._fadeOut,\n        url: this._buffers.get(name)\n      }).connect(this.output);\n\n      this._players.set(name, player);\n    }\n\n    return this._players.get(name);\n  }\n  /**\n   * If all the buffers are loaded or not\n   */\n\n\n  get loaded() {\n    return this._buffers.loaded;\n  }\n  /**\n   * Add a player by name and url to the Players\n   * @param  name A unique name to give the player\n   * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n   * @param callback  The callback to invoke when the url is loaded.\n   */\n\n\n  add(name, url, callback) {\n    assert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n\n    this._buffers.add(name, url, callback);\n\n    return this;\n  }\n  /**\n   * Stop all of the players at the given time\n   * @param time The time to stop all of the players.\n   */\n\n\n  stopAll(time) {\n    this._players.forEach(player => player.stop(time));\n\n    return this;\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._volume.dispose();\n\n    this.volume.dispose();\n\n    this._players.forEach(player => player.dispose());\n\n    this._buffers.dispose();\n\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["Volume","ToneAudioBuffers","ToneAudioNode","optionsFromArguments","assert","noOp","readOnly","Source","Player","Players","constructor","getDefaults","arguments","undefined","Map","options","_volume","output","context","volume","_buffers","urls","onload","baseUrl","onerror","mute","_fadeIn","fadeIn","_fadeOut","fadeOut","Object","assign","_players","forEach","player","state","playing","Array","from","some","_","has","name","url","get","connect","set","loaded","add","callback","stopAll","time","stop","dispose"],"sourceRoot":"","sources":["../../../../Tone/source/buffer/Players.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}