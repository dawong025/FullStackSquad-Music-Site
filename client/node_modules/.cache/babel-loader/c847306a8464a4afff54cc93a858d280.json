{"ast":null,"code":"import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\n\nexport class DCMeter extends MeterBase {\n  constructor() {\n    super(optionsFromArguments(DCMeter.getDefaults(), arguments));\n    this.name = \"DCMeter\";\n    this._analyser.type = \"waveform\";\n    this._analyser.size = 256;\n  }\n  /**\n   * Get the signal value of the incoming signal\n   */\n\n\n  getValue() {\n    const value = this._analyser.getValue();\n\n    return value[0];\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,oBAAT,QAAqC,0BAArC;AACA,SAASC,SAAT,QAA4C,aAA5C;AAIA;;;;;;;;;;;;;;AAaA,OAAM,MAAOC,OAAP,SAAuBD,SAAvB,CAAgD;EAKrDE;IACC,MAAMH,oBAAoB,CAACE,OAAO,CAACE,WAAR,EAAD,EAAwBC,SAAxB,CAA1B;IAJQ,YAAe,SAAf;IAMR,KAAKC,SAAL,CAAeC,IAAf,GAAsB,UAAtB;IACA,KAAKD,SAAL,CAAeE,IAAf,GAAsB,GAAtB;EACA;EAED;;;;;EAGAC,QAAQ;IACP,MAAMC,KAAK,GAAG,KAAKJ,SAAL,CAAeG,QAAf,EAAd;;IACA,OAAOC,KAAK,CAAC,CAAD,CAAZ;EACA;;AAlBoD","names":["optionsFromArguments","MeterBase","DCMeter","constructor","getDefaults","arguments","_analyser","type","size","getValue","value"],"sourceRoot":"","sources":["../../../../Tone/component/analysis/DCMeter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}