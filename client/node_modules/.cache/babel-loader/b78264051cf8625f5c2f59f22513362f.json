{"ast":null,"code":"import { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5).toDestination().start();\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\n\nexport class Chorus extends StereoFeedbackEffect {\n  constructor() {\n    super(optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n    this.name = \"Chorus\";\n    const options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n    this._depth = options.depth;\n    this._delayTime = options.delayTime / 1000;\n    this._lfoL = new LFO({\n      context: this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1\n    });\n    this._lfoR = new LFO({\n      context: this.context,\n      frequency: options.frequency,\n      min: 0,\n      max: 1,\n      phase: 180\n    });\n    this._delayNodeL = new Delay({\n      context: this.context\n    });\n    this._delayNodeR = new Delay({\n      context: this.context\n    });\n    this.frequency = this._lfoL.frequency;\n    readOnly(this, [\"frequency\"]); // have one LFO frequency control the other\n\n    this._lfoL.frequency.connect(this._lfoR.frequency); // connections\n\n\n    this.connectEffectLeft(this._delayNodeL);\n    this.connectEffectRight(this._delayNodeR); // lfo setup\n\n    this._lfoL.connect(this._delayNodeL.delayTime);\n\n    this._lfoR.connect(this._delayNodeR.delayTime); // set the initial values\n\n\n    this.depth = this._depth;\n    this.type = options.type;\n    this.spread = options.spread;\n  }\n\n  static getDefaults() {\n    return Object.assign(StereoFeedbackEffect.getDefaults(), {\n      frequency: 1.5,\n      delayTime: 3.5,\n      depth: 0.7,\n      type: \"sine\",\n      spread: 180,\n      feedback: 0,\n      wet: 0.5\n    });\n  }\n  /**\n   * The depth of the effect. A depth of 1 makes the delayTime\n   * modulate between 0 and 2*delayTime (centered around the delayTime).\n   */\n\n\n  get depth() {\n    return this._depth;\n  }\n\n  set depth(depth) {\n    this._depth = depth;\n    const deviation = this._delayTime * depth;\n    this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n    this._lfoL.max = this._delayTime + deviation;\n    this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n    this._lfoR.max = this._delayTime + deviation;\n  }\n  /**\n   * The delayTime in milliseconds of the chorus. A larger delayTime\n   * will give a more pronounced effect. Nominal range a delayTime\n   * is between 2 and 20ms.\n   */\n\n\n  get delayTime() {\n    return this._delayTime * 1000;\n  }\n\n  set delayTime(delayTime) {\n    this._delayTime = delayTime / 1000;\n    this.depth = this._depth;\n  }\n  /**\n   * The oscillator type of the LFO.\n   */\n\n\n  get type() {\n    return this._lfoL.type;\n  }\n\n  set type(type) {\n    this._lfoL.type = type;\n    this._lfoR.type = type;\n  }\n  /**\n   * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n   * When set to 180, LFO's will be panned hard left and right respectively.\n   */\n\n\n  get spread() {\n    return this._lfoR.phase - this._lfoL.phase;\n  }\n\n  set spread(spread) {\n    this._lfoL.phase = 90 - spread / 2;\n    this._lfoR.phase = spread / 2 + 90;\n  }\n  /**\n   * Start the effect.\n   */\n\n\n  start(time) {\n    this._lfoL.start(time);\n\n    this._lfoR.start(time);\n\n    return this;\n  }\n  /**\n   * Stop the lfo\n   */\n\n\n  stop(time) {\n    this._lfoL.stop(time);\n\n    this._lfoR.stop(time);\n\n    return this;\n  }\n  /**\n   * Sync the filter to the transport. See [[LFO.sync]]\n   */\n\n\n  sync() {\n    this._lfoL.sync();\n\n    this._lfoR.sync();\n\n    return this;\n  }\n  /**\n   * Unsync the filter from the transport.\n   */\n\n\n  unsync() {\n    this._lfoL.unsync();\n\n    this._lfoR.unsync();\n\n    return this;\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._lfoL.dispose();\n\n    this._lfoR.dispose();\n\n    this._delayNodeL.dispose();\n\n    this._delayNodeR.dispose();\n\n    this.frequency.dispose();\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["StereoFeedbackEffect","optionsFromArguments","LFO","Delay","readOnly","Chorus","constructor","getDefaults","arguments","options","_depth","depth","_delayTime","delayTime","_lfoL","context","frequency","min","max","_lfoR","phase","_delayNodeL","_delayNodeR","connect","connectEffectLeft","connectEffectRight","type","spread","Object","assign","feedback","wet","deviation","Math","start","time","stop","sync","unsync","dispose"],"sourceRoot":"","sources":["../../../Tone/effect/Chorus.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}