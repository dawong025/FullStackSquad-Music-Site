{"ast":null,"code":"import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n * @category Component\n */\n\nexport class MultibandCompressor extends ToneAudioNode {\n  constructor() {\n    super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments)));\n    this.name = \"MultibandCompressor\";\n    const options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n    this._splitter = this.input = new MultibandSplit({\n      context: this.context,\n      lowFrequency: options.lowFrequency,\n      highFrequency: options.highFrequency\n    });\n    this.lowFrequency = this._splitter.lowFrequency;\n    this.highFrequency = this._splitter.highFrequency;\n    this.output = new Gain({\n      context: this.context\n    });\n    this.low = new Compressor(Object.assign(options.low, {\n      context: this.context\n    }));\n    this.mid = new Compressor(Object.assign(options.mid, {\n      context: this.context\n    }));\n    this.high = new Compressor(Object.assign(options.high, {\n      context: this.context\n    })); // connect the compressor\n\n    this._splitter.low.chain(this.low, this.output);\n\n    this._splitter.mid.chain(this.mid, this.output);\n\n    this._splitter.high.chain(this.high, this.output);\n\n    readOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n  }\n\n  static getDefaults() {\n    return Object.assign(ToneAudioNode.getDefaults(), {\n      lowFrequency: 250,\n      highFrequency: 2000,\n      low: {\n        ratio: 6,\n        threshold: -30,\n        release: 0.25,\n        attack: 0.03,\n        knee: 10\n      },\n      mid: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      },\n      high: {\n        ratio: 3,\n        threshold: -24,\n        release: 0.03,\n        attack: 0.02,\n        knee: 16\n      }\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._splitter.dispose();\n\n    this.low.dispose();\n    this.mid.dispose();\n    this.high.dispose();\n    this.output.dispose();\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"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","names":["ToneAudioNode","Compressor","optionsFromArguments","readOnly","MultibandSplit","Gain","MultibandCompressor","constructor","Object","assign","getDefaults","arguments","options","_splitter","input","context","lowFrequency","highFrequency","output","low","mid","high","chain","ratio","threshold","release","attack","knee","dispose"],"sourceRoot":"","sources":["../../../../Tone/component/dynamics/MultibandCompressor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}