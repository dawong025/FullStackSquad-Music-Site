{"ast":null,"code":"import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\n\nexport class Vibrato extends Effect {\n  constructor() {\n    super(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n    this.name = \"Vibrato\";\n    const options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n    this._delayNode = new Delay({\n      context: this.context,\n      delayTime: 0,\n      maxDelay: options.maxDelay\n    });\n    this._lfo = new LFO({\n      context: this.context,\n      type: options.type,\n      min: 0,\n      max: options.maxDelay,\n      frequency: options.frequency,\n      phase: -90 // offse the phase so the resting position is in the center\n\n    }).start().connect(this._delayNode.delayTime);\n    this.frequency = this._lfo.frequency;\n    this.depth = this._lfo.amplitude;\n    this.depth.value = options.depth;\n    readOnly(this, [\"frequency\", \"depth\"]);\n    this.effectSend.chain(this._delayNode, this.effectReturn);\n  }\n\n  static getDefaults() {\n    return Object.assign(Effect.getDefaults(), {\n      maxDelay: 0.005,\n      frequency: 5,\n      depth: 0.1,\n      type: \"sine\"\n    });\n  }\n  /**\n   * Type of oscillator attached to the Vibrato.\n   */\n\n\n  get type() {\n    return this._lfo.type;\n  }\n\n  set type(type) {\n    this._lfo.type = type;\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._delayNode.dispose();\n\n    this._lfo.dispose();\n\n    this.frequency.dispose();\n    this.depth.dispose();\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,MAAT,QAAsC,UAAtC;AAGA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,GAAT,QAAoB,0BAApB;AACA,SAASC,KAAT,QAAsB,uBAAtB;AAGA,SAASC,QAAT,QAAyB,wBAAzB;AAQA;;;;;;AAKA,OAAM,MAAOC,OAAP,SAAuBL,MAAvB,CAA6C;EA6BlDM;IAEC,MAAML,oBAAoB,CAACI,OAAO,CAACE,WAAR,EAAD,EAAwBC,SAAxB,EAAmC,CAAC,WAAD,EAAc,OAAd,CAAnC,CAA1B;IA7BQ,YAAe,SAAf;IA8BR,MAAMC,OAAO,GAAGR,oBAAoB,CAACI,OAAO,CAACE,WAAR,EAAD,EAAwBC,SAAxB,EAAmC,CAAC,WAAD,EAAc,OAAd,CAAnC,CAApC;IAEA,KAAKE,UAAL,GAAkB,IAAIP,KAAJ,CAAU;MAC3BQ,OAAO,EAAE,KAAKA,OADa;MAE3BC,SAAS,EAAE,CAFgB;MAG3BC,QAAQ,EAAEJ,OAAO,CAACI;IAHS,CAAV,CAAlB;IAKA,KAAKC,IAAL,GAAY,IAAIZ,GAAJ,CAAQ;MACnBS,OAAO,EAAE,KAAKA,OADK;MAEnBI,IAAI,EAAEN,OAAO,CAACM,IAFK;MAGnBC,GAAG,EAAE,CAHc;MAInBC,GAAG,EAAER,OAAO,CAACI,QAJM;MAKnBK,SAAS,EAAET,OAAO,CAACS,SALA;MAMnBC,KAAK,EAAE,CAAC,EANW,CAMR;;IANQ,CAAR,EAOTC,KAPS,GAODC,OAPC,CAOO,KAAKX,UAAL,CAAgBE,SAPvB,CAAZ;IAQA,KAAKM,SAAL,GAAiB,KAAKJ,IAAL,CAAUI,SAA3B;IACA,KAAKI,KAAL,GAAa,KAAKR,IAAL,CAAUS,SAAvB;IAEA,KAAKD,KAAL,CAAWE,KAAX,GAAmBf,OAAO,CAACa,KAA3B;IACAlB,QAAQ,CAAC,IAAD,EAAO,CAAC,WAAD,EAAc,OAAd,CAAP,CAAR;IACA,KAAKqB,UAAL,CAAgBC,KAAhB,CAAsB,KAAKhB,UAA3B,EAAuC,KAAKiB,YAA5C;EACA;;EAEiB,OAAXpB,WAAW;IACjB,OAAOqB,MAAM,CAACC,MAAP,CAAc7B,MAAM,CAACO,WAAP,EAAd,EAAoC;MAC1CM,QAAQ,EAAE,KADgC;MAE1CK,SAAS,EAAE,CAF+B;MAG1CI,KAAK,EAAE,GAHmC;MAI1CP,IAAI,EAAE;IAJoC,CAApC,CAAP;EAMA;EAED;;;;;EAGQ,IAAJA,IAAI;IACP,OAAO,KAAKD,IAAL,CAAUC,IAAjB;EACA;;EACO,IAAJA,IAAI,CAACA,IAAD,EAAK;IACZ,KAAKD,IAAL,CAAUC,IAAV,GAAiBA,IAAjB;EACA;;EAEDe,OAAO;IACN,MAAMA,OAAN;;IACA,KAAKpB,UAAL,CAAgBoB,OAAhB;;IACA,KAAKhB,IAAL,CAAUgB,OAAV;;IACA,KAAKZ,SAAL,CAAeY,OAAf;IACA,KAAKR,KAAL,CAAWQ,OAAX;IACA,OAAO,IAAP;EACA;;AAjFiD","names":["Effect","optionsFromArguments","LFO","Delay","readOnly","Vibrato","constructor","getDefaults","arguments","options","_delayNode","context","delayTime","maxDelay","_lfo","type","min","max","frequency","phase","start","connect","depth","amplitude","value","effectSend","chain","effectReturn","Object","assign","dispose"],"sourceRoot":"","sources":["../../../Tone/effect/Vibrato.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}