{"ast":null,"code":"import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\n\nexport class Subtract extends Signal {\n  constructor() {\n    super(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n    this.override = false;\n    this.name = \"Subtract\";\n    /**\n     * the summing node\n     */\n\n    this._sum = new Gain({\n      context: this.context\n    });\n    this.input = this._sum;\n    this.output = this._sum;\n    /**\n     * Negate the input of the second input before connecting it to the summing node.\n     */\n\n    this._neg = new Negate({\n      context: this.context\n    });\n    /**\n     * The value which is subtracted from the main signal\n     */\n\n    this.subtrahend = this._param;\n    connectSeries(this._constantSource, this._neg, this._sum);\n  }\n\n  static getDefaults() {\n    return Object.assign(Signal.getDefaults(), {\n      value: 0\n    });\n  }\n\n  dispose() {\n    super.dispose();\n\n    this._neg.dispose();\n\n    this._sum.dispose();\n\n    return this;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,QAA8B,+BAA9B;AACA,SAASC,IAAT,QAAqB,sBAArB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAsC,kBAAtC;AAEA;;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,MAAOC,QAAP,SAAwBD,MAAxB,CAA8B;EA6BnCE;IACC,MAAMC,MAAM,CAACC,MAAP,CAAcN,oBAAoB,CAACG,QAAQ,CAACI,WAAT,EAAD,EAAyBC,SAAzB,EAAoC,CAAC,OAAD,CAApC,CAAlC,CAAN;IA5BD,gBAAW,KAAX;IAES,YAAe,UAAf;IAET;;;;IAGQ,YAAa,IAAIT,IAAJ,CAAS;MAAEU,OAAO,EAAE,KAAKA;IAAhB,CAAT,CAAb;IACC,aAAc,KAAKC,IAAnB;IACA,cAAe,KAAKA,IAApB;IAET;;;;IAGQ,YAAe,IAAIT,MAAJ,CAAW;MAAEQ,OAAO,EAAE,KAAKA;IAAhB,CAAX,CAAf;IAER;;;;IAGA,kBAA8B,KAAKE,MAAnC;IAWCb,aAAa,CAAC,KAAKc,eAAN,EAAuB,KAAKC,IAA5B,EAAkC,KAAKH,IAAvC,CAAb;EACA;;EAEiB,OAAXH,WAAW;IACjB,OAAOF,MAAM,CAACC,MAAP,CAAcJ,MAAM,CAACK,WAAP,EAAd,EAAoC;MAC1CO,KAAK,EAAE;IADmC,CAApC,CAAP;EAGA;;EAEDC,OAAO;IACN,MAAMA,OAAN;;IACA,KAAKF,IAAL,CAAUE,OAAV;;IACA,KAAKL,IAAL,CAAUK,OAAV;;IACA,OAAO,IAAP;EACA;;AA9CkC","names":["connectSeries","Gain","optionsFromArguments","Negate","Signal","Subtract","constructor","Object","assign","getDefaults","arguments","context","_sum","_param","_constantSource","_neg","value","dispose"],"sourceRoot":"","sources":["../../../Tone/signal/Subtract.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}